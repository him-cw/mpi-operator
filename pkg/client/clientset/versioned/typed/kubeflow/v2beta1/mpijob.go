// Copyright 2025 The Kubeflow Authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by client-gen. DO NOT EDIT.

package v2beta1

import (
	"context"

	v2beta1 "github.com/coreweave/group-operator/pkg/apis/kubeflow/v2beta1"
	kubeflowv2beta1 "github.com/coreweave/group-operator/pkg/client/applyconfiguration/kubeflow/v2beta1"
	scheme "github.com/coreweave/group-operator/pkg/client/clientset/versioned/scheme"
	v1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	types "k8s.io/apimachinery/pkg/types"
	watch "k8s.io/apimachinery/pkg/watch"
	gentype "k8s.io/client-go/gentype"
)

// GroupJobsGetter has a method to return a GroupJobInterface.
// A group's client should implement this interface.
type GroupJobsGetter interface {
	GroupJobs(namespace string) GroupJobInterface
}

// GroupJobInterface has methods to work with GroupJob resources.
type GroupJobInterface interface {
	Create(ctx context.Context, mPIJob *v2beta1.GroupJob, opts v1.CreateOptions) (*v2beta1.GroupJob, error)
	Update(ctx context.Context, mPIJob *v2beta1.GroupJob, opts v1.UpdateOptions) (*v2beta1.GroupJob, error)
	// Add a +genclient:noStatus comment above the type to avoid generating UpdateStatus().
	UpdateStatus(ctx context.Context, mPIJob *v2beta1.GroupJob, opts v1.UpdateOptions) (*v2beta1.GroupJob, error)
	Delete(ctx context.Context, name string, opts v1.DeleteOptions) error
	DeleteCollection(ctx context.Context, opts v1.DeleteOptions, listOpts v1.ListOptions) error
	Get(ctx context.Context, name string, opts v1.GetOptions) (*v2beta1.GroupJob, error)
	List(ctx context.Context, opts v1.ListOptions) (*v2beta1.GroupJobList, error)
	Watch(ctx context.Context, opts v1.ListOptions) (watch.Interface, error)
	Patch(ctx context.Context, name string, pt types.PatchType, data []byte, opts v1.PatchOptions, subresources ...string) (result *v2beta1.GroupJob, err error)
	Apply(ctx context.Context, mPIJob *kubeflowv2beta1.GroupJobApplyConfiguration, opts v1.ApplyOptions) (result *v2beta1.GroupJob, err error)
	// Add a +genclient:noStatus comment above the type to avoid generating ApplyStatus().
	ApplyStatus(ctx context.Context, mPIJob *kubeflowv2beta1.GroupJobApplyConfiguration, opts v1.ApplyOptions) (result *v2beta1.GroupJob, err error)
	GroupJobExpansion
}

// mPIJobs implements GroupJobInterface
type mPIJobs struct {
	*gentype.ClientWithListAndApply[*v2beta1.GroupJob, *v2beta1.GroupJobList, *kubeflowv2beta1.GroupJobApplyConfiguration]
}

// newGroupJobs returns a GroupJobs
func newGroupJobs(c *KubeflowV2beta1Client, namespace string) *mPIJobs {
	return &mPIJobs{
		gentype.NewClientWithListAndApply[*v2beta1.GroupJob, *v2beta1.GroupJobList, *kubeflowv2beta1.GroupJobApplyConfiguration](
			"groupjobs",
			c.RESTClient(),
			scheme.ParameterCodec,
			namespace,
			func() *v2beta1.GroupJob { return &v2beta1.GroupJob{} },
			func() *v2beta1.GroupJobList { return &v2beta1.GroupJobList{} }),
	}
}
